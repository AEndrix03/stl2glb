version: "3.9"

# Rete comune
networks:
  stl2glb-net:
    driver: bridge

# Volumes per VCPKG
volumes:
  vcpkg_cache:
    driver: local
    driver_opts:
      type: none
      device: /home/vcpkg
      o: bind

services:
  # Servizio Builder - costruisce l'immagine
  builder:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
      args:
        VCPKG_DIR: /vcpkg
        BUILD_TYPE: MinSizeRel
    image: stl2glb:builder
    container_name: stl2glb_builder
    volumes:
      - vcpkg_cache:/vcpkg:ro
      - ./:/build
    command: echo "Build completed"
    networks:
      - stl2glb-net

  # Servizio App - runtime minimale
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
    image: stl2glb:runtime
    container_name: stl2glb_app
    restart: always
    depends_on:
      builder:
        condition: service_completed_successfully

    # Porte
    ports:
      - "9002:8080"

    # Environment da file .env
    env_file:
      - .env

    # Variabili aggiuntive per ottimizzazione
    environment:
      - MALLOC_ARENA_MAX=1
      - GOMAXPROCS=1

    # DNS ottimizzato
    dns:
      - 1.1.1.1
      - 8.8.8.8

    # Host esterni per MinIO
    extra_hosts:
      - "minio:217.160.248.228"
      - "minio.aredegalli.it:217.160.248.228"

    # Risorse limitate per VPS
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
          pids: 100
        reservations:
          cpus: '0.1'
          memory: 128M

    # Health check
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

    # Logging ottimizzato
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"
        compress: "true"

    # Security options
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE

    # Read-only filesystem con eccezioni
    read_only: true
    tmpfs:
      - /tmp:size=50M,noexec,nosuid,nodev

    # Tuning di rete per performance
    sysctls:
      - net.core.somaxconn=128
      - net.ipv4.tcp_fin_timeout=30
      - net.ipv4.tcp_keepalive_time=600

    networks:
      - stl2glb-net

  # Servizio di monitoraggio opzionale (profilo monitoring)
  monitor:
    image: alpine:3.19
    container_name: stl2glb_monitor
    profiles:
      - monitoring
    restart: always
    command: |
      sh -c "
      apk add --no-cache curl jq && \
      while true; do
        STATUS=$$(curl -s -o /dev/null -w '%{http_code}' http://app:8080/health || echo '000')
        MEM=$$(cat /proc/meminfo | grep MemAvailable | awk '{print $$2}')
        CPU=$$(top -bn1 | grep 'Cpu(s)' | awk '{print $$2}' | cut -d'%' -f1)
        echo \"[$$(date '+%Y-%m-%d %H:%M:%S')] Status: $$STATUS | Mem: $${MEM}KB | CPU: $${CPU}%\"
        sleep 30
      done
      "
    networks:
      - stl2glb-net
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 32M