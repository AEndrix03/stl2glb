version: "3.9"

# Variabili globali per performance
x-build-args: &build-args
  BUILDKIT_INLINE_CACHE: 1
  DOCKER_BUILDKIT: 1

x-cache-mounts: &cache-mounts
  - type: cache
    target: /cache
  - type: bind
    source: ${VCPKG_HOST_DIR:-/opt/vcpkg}
    target: /vcpkg
    read_only: true

networks:
  stl2glb-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

services:
  # Servizio principale con build ottimizzata
  app:
    build:
      context: .
      dockerfile: Dockerfile-optimized
      target: runtime  # usa 'runtime-debug' per debug
      cache_from:
        - type=local,src=/tmp/buildx-cache
      cache_to:
        - type=local,dest=/tmp/buildx-cache,mode=max
      args:
        <<: *build-args

    image: stl2glb:optimized
    container_name: stl2glb_app

    # Ottimizzazioni runtime
    restart: unless-stopped
    read_only: true
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL

    # Networking ottimizzato
    networks:
      stl2glb-network:
        ipv4_address: 172.20.0.10

    ports:
      - "9002:8080"

    # DNS veloce
    dns:
      - 1.1.1.1
      - 1.0.0.1

    # Environment
    env_file:
      - .env
    environment:
      - MALLOC_ARENA_MAX=1
      - MALLOC_MMAP_THRESHOLD_=131072
      - GOMAXPROCS=1

    # Host fissi per MinIO
    extra_hosts:
      - "minio:217.160.248.228"
      - "minio.aredegalli.it:217.160.248.228"

    # Risorse ottimizzate
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M

    # Health check veloce
    healthcheck:
      test: ["CMD", "/app/stl2glb_exec", "--health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s

    # Logging ottimizzato
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        compress: "true"

    # Mount temporaneo per /tmp
    tmpfs:
      - /tmp:size=100M,noexec,nosuid,nodev

  # Servizio tiny per VPS con risorse limitate
  app-tiny:
    extends: app
    profiles:
      - tiny
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M

    # Logging ancora più limitato
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

  # Monitor leggero opzionale
  monitor:
    image: alpine:3.19
    container_name: stl2glb_monitor
    profiles:
      - monitoring
    command: |
      sh -c "
      apk add --no-cache curl jq && \
      while true; do
        STATUS=$$(curl -s -o /dev/null -w '%{http_code}' http://app:8080/health || echo '000')
        if [ \"$$STATUS\" = \"200\" ]; then
          echo \"✅ [$$(date '+%Y-%m-%d %H:%M:%S')] Health check OK\"
        else
          echo \"❌ [$$(date '+%Y-%m-%d %H:%M:%S')] Health check failed: $$STATUS\"
        fi
        sleep 30
      done
      "
    networks:
      - stl2glb-network
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 32M
    restart: unless-stopped