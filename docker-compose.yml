version: "3.9"

networks:
  stl2glb-net:
    driver: bridge

services:
  builder:
    image: ubuntu:22.04
    container_name: stl2glb_builder
    volumes:
      - ./:/src:ro
      - /home/vcpkg:/vcpkg:ro
    working_dir: /src
    command: >
      bash -c "
        mkdir -p /build &&
        cmake -B /build -S . \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_TOOLCHAIN_FILE=/vcpkg/scripts/buildsystems/vcpkg.cmake \
          -DVCPKG_TARGET_TRIPLET=x64-linux \
          -DVCPKG_INSTALLED_DIR=/vcpkg/installed &&
        cmake --build /build --config Release --parallel &&
        strip /build/stl2glb
      "
    # L'immagine “builder” viene però usata solo per generare il binario,
    # non la useremo come runtime. Docker Compose considererà questo servizio
    # come “dipendenza di build” (ma non lo terremo in esecuzione in produzione).
    networks:
      - stl2glb-net

  app:
    build:
      context: .
      dockerfile: Dockerfile    # il Dockerfile multi‐stage di cui sopra
    image: stl2glb:runtime      # nome “stl2glb:runtime” (o come vuoi)
    container_name: stl2glb_app
    depends_on:
      - builder
    restart: always
    ports:
      - "9002:8080"
    env_file:
      - .env                      # se ne hai bisogno
    environment:
      - MALLOC_ARENA_MAX=1
      - GOMAXPROCS=1
    dns:
      - 1.1.1.1
      - 8.8.8.8
    security_opt:
      - no-new-privileges:true   # o rimuovilo se ti dà problemi
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    tmpfs:
      - /tmp:size=50M,noexec,nosuid,nodev
    networks:
      - stl2glb-net

# Non ti serve nessun volume “build_output”:
# volumes:
#   build_output:
#     driver: local
