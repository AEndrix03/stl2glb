version: "3.9"

# Docker Compose ottimizzato per VPS con risorse molto limitate
# Usa vcpkg pre-installato sull'host per build velocissime

services:
  # App ultra-minimale per VPS
  app:
    build:
      context: .
      dockerfile_inline: |
        # Build stage ultra-compatto
        FROM alpine:3.19 AS builder
        
        # Installa solo il minimo per compilare
        RUN apk add --no-cache \
            build-base cmake ninja ccache \
            openssl-dev linux-headers
        
        WORKDIR /build
        COPY . .
        
        # Build con vcpkg esterno
        RUN --mount=type=bind,source=${VCPKG_HOST_DIR:-/opt/vcpkg},target=/vcpkg,ro \
            --mount=type=cache,target=/root/.ccache \
            cmake -B build -S . \
                -DCMAKE_BUILD_TYPE=MinSizeRel \
                -DCMAKE_TOOLCHAIN_FILE=/vcpkg/scripts/buildsystems/vcpkg.cmake \
                -DVCPKG_TARGET_TRIPLET=x64-linux-static \
                -GNinja && \
            cmake --build build --config MinSizeRel
        
        # Runtime con distroless (12MB!)
        FROM gcr.io/distroless/static-debian12:nonroot
        COPY --from=builder /build/build/stl2glb_exec /stl2glb_exec
        EXPOSE 8080
        ENTRYPOINT ["/stl2glb_exec"]

    image: stl2glb:tiny
    container_name: stl2glb_tiny

    # Configurazione minimale
    restart: unless-stopped
    read_only: true
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL

    ports:
      - "9002:8080"

    env_file:
      - .env

    environment:
      - MALLOC_ARENA_MAX=1
      - GOMAXPROCS=1

    # DNS cache locale
    dns:
      - 127.0.0.1
      - 1.1.1.1

    # Host MinIO
    extra_hosts:
      - "minio:217.160.248.228"
      - "minio.aredegalli.it:217.160.248.228"

    # Risorse ultra-limitate per VPS economiche
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 128M
          pids: 50
        reservations:
          cpus: '0.1'
          memory: 64M

    # Health check minimale
    healthcheck:
      test: ["CMD", "/stl2glb_exec", "--health"]
      interval: 60s
      timeout: 5s
      retries: 2
      start_period: 20s

    # Logging minimale
    logging:
      driver: "json-file"
      options:
        max-size: "2m"
        max-file: "1"
        compress: "true"

    # Sysctls per performance su risorse limitate
    sysctls:
      - net.core.somaxconn=128
      - net.ipv4.tcp_fin_timeout=30
      - net.ipv4.tcp_keepalive_time=600

    # Tmpfs minimale
    tmpfs:
      - /tmp:size=50M,noexec,nosuid,nodev